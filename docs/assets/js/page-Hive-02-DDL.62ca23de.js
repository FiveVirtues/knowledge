(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{1057:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"ddl-概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ddl-概述"}},[s._v("#")]),s._v(" DDL 概述")]),s._v(" "),n("p",[s._v("数据定义语言：Data Definition Language，DDL，是 SQL 中对数据库内部对象（数据库 schema、数据表 table、数据视图 view、索引 index）的结构进行增删改的操作语言。")]),s._v(" "),n("p",[s._v("核心语法即："),n("code",[s._v("CREATE")]),s._v("、"),n("code",[s._v("ALTER")]),s._v("、"),n("code",[s._v("DROP")]),s._v(" 等。")]),s._v(" "),n("p",[s._v("HQL 基本和 SQL 相同，在此基础上添加了一些特有的语法，例如分区 partition。")]),s._v(" "),n("h2",{attrs:{id:"ddl-基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ddl-基础"}},[s._v("#")]),s._v(" DDL 基础")]),s._v(" "),n("h3",{attrs:{id:"hive-数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hive-数据类型"}},[s._v("#")]),s._v(" Hive 数据类型")]),s._v(" "),n("p",[n("strong",[s._v("完整建表语法")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TEMPORARY")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("EXTERNAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("db_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("table_name\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col_name data_type "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" col_comment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ……"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" table_comment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("PARTITIONED "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col_name data_type "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" col_comment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ……"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CLUSTERED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" col_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ……"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("SORTED "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col_name "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ASC")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ……"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" num_buckets BUCKETS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROW")]),s._v(" FORMAT DELIMITED "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FIELDS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TERMINATED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COLLECTION ITEMS "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TERMINATED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("MAP "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEYS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TERMINATED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LINES")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TERMINATED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" SERDE serde_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" SERDEPROPERTIES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("property_value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ……"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("STORED "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" file_format"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("LOCATION hdfs_path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("TBLPROPERTIES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property_name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("property_value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ……"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("大写字母为关键字。中括号内语法表示可选。分隔符表示左右语法二选一。")]),s._v(" "),n("hr"),s._v(" "),n("p",[n("strong",[s._v("Hive 数据类型")])]),s._v(" "),n("p",[s._v("Hive 中，数据类型分为：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("原生数据类型：数值、时间、字符串、杂项。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(955),alt:""}})])]),s._v(" "),n("li",[n("p",[s._v("复杂数据类型：array 数组、map 映射、struct 结构、union 联合体。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(956),alt:""}})])])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("Tips")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("Hive 对英文字母大小写不敏感，除了 SQL 数据类型还支持 Java 数据类型（例如 String）。")])]),s._v(" "),n("li",[n("p",[s._v("复杂类型的使用通常和分隔符语法配合。")])]),s._v(" "),n("li",[n("p",[s._v("如果定义的数据类型不一致，Hive 会尝试隐式转换，但是不一定能成功")]),s._v(" "),n("p",[n("img",{attrs:{src:a(957),alt:""}})])]),s._v(" "),n("li",[n("p",[s._v("除了隐式转换之外，还可以使用 "),n("code",[s._v("CAST")]),s._v(" 来进行显式类型转换 CAST(数据字段 AS 新类型)，例如 "),n("code",[s._v("CAST ('INT' AS INT)")]),s._v(" 强制转为 INT 类型，但是转换失败，返回 NULL。")])])])]),s._v(" "),n("h3",{attrs:{id:"hive-读写文件机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hive-读写文件机制"}},[s._v("#")]),s._v(" Hive 读写文件机制")]),s._v(" "),n("p",[n("strong",[s._v("SerDe")])]),s._v(" "),n("p",[s._v("SerDe，是 Serializer、Deserializer 的简称目的是序列化（对象到字节码）和反序列化（字节码到对象）。Hive 可使用 SerDe 进行对象的读取和写入。")]),s._v(" "),n("p",[n("strong",[s._v("Hive 读写文件流程")])]),s._v(" "),n("p",[s._v("Hive 读取文件：调用 InputFormat（Hadoop 默认是使用 TextInputFormat），返回 KV 键值对，然后调用 SerDe（默认是 LazySimpleSerDe），将 value 根据分隔符切分为各个字段。")]),s._v(" "),n("p",[s._v("Hive 写文件：调用 SerDe（默认是 LazySimpleSerDe）转为字节序列，然后调用 OutputFormat 写入 HDFS。")]),s._v(" "),n("p",[n("strong",[s._v("SerDe 相关语法")])]),s._v(" "),n("p",[n("code",[s._v("[ROW FORMAT DELIMITED | SERDE]")])]),s._v(" "),n("p",[s._v("其中，"),n("code",[s._v("ROW FORMAT")]),s._v(" 为关键字，DELIMITED 和 SERDE 二选一。")]),s._v(" "),n("p",[n("code",[s._v("DELIMITED")]),s._v(" 表示使用默认的 SERDE 类："),n("code",[s._v("LazySimpleSerDe")]),s._v(" 类来进行数据处理。假如数据格式特殊，可以使用 "),n("code",[s._v("ROW FORMAT SERDE serde_name")]),s._v(" 指定其他的 SERDE 类来进行处理，甚至还可以自定义 SERDE 类。")]),s._v(" "),n("p",[n("strong",[s._v("LazySimpleSerDe")])]),s._v(" "),n("p",[s._v("LazySimpleSerDe 是 Hive 中默认的序列化类，可以指定字段之间、集合元素之间、map 映射之间、换行之间的分隔符，在建表的时候可以灵活搭配。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(958),alt:""}})]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("Tips")]),s._v(" "),n("p",[s._v("假如没有指定默认的 "),n("code",[s._v("ROW FORMAT")]),s._v("，那么默认的字段分隔符是 "),n("code",[s._v("\\001")]),s._v("，使用的是 ASCII 编码，显示为 "),n("code",[s._v("SOH")]),s._v("，在 vim 中显示为 "),n("code",[s._v("^A")]),s._v("。使用键盘无法打出。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(959),alt:""}})])]),s._v(" "),n("h3",{attrs:{id:"hive-数据存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hive-数据存储"}},[s._v("#")]),s._v(" Hive 数据存储")]),s._v(" "),n("p",[n("strong",[s._v("默认存储路径")])]),s._v(" "),n("p",[s._v("Hive 默认存储在 "),n("code",[s._v("${HIVE_HOME}/conf/hive-site.xml")]),s._v(" 配置文件的 "),n("code",[s._v("hive.metastore.warehouse.dir")]),s._v(" 中指定，默认值为 "),n("code",[s._v("/user/hive/warehouse")]),s._v("。")]),s._v(" "),n("p",[s._v("Hive 的库、表均存储在此路径下。")]),s._v(" "),n("p",[n("strong",[s._v("指定存储路径")])]),s._v(" "),n("p",[s._v("在 Hive 建表时可使用 "),n("code",[s._v("LOCATION ${location}")]),s._v(" 指定在 HDFS 上的路径。")]),s._v(" "),n("h2",{attrs:{id:"ddl-深入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ddl-深入"}},[s._v("#")]),s._v(" DDL 深入")]),s._v(" "),n("h3",{attrs:{id:"hive-内外表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hive-内外表"}},[s._v("#")]),s._v(" Hive 内外表")]),s._v(" "),n("p",[n("strong",[s._v("Hive 内部表")])]),s._v(" "),n("p",[s._v("内部表，Internal Table，被称为被 Hive 拥有和管理的托管表，默认创建的就是内部表。")]),s._v(" "),n("p",[s._v("当删除内部表时，Hive 会同时删除内部表的数据和内部表的元数据。")]),s._v(" "),n("p",[s._v("使用 "),n("code",[s._v("DESCRIBE FORMATTED ${table_name}")]),s._v(" 查看表的描述信息，进而查看表的类型，其中 Table Type 为 "),n("code",[s._v("MANAGED_TABLE")]),s._v(" 表示的就是内部表。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(960),alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("Hive 外部表")])]),s._v(" "),n("p",[s._v("外部表，External Table，它的元数据被 Hive 管理但是实际数据不会被 Hive 管理。")]),s._v(" "),n("p",[s._v("简单来说，删除外部表不会删除表的数据，只会删除表的元数据。")]),s._v(" "),n("p",[s._v("外部表需要使用关键字 "),n("code",[s._v("EXTERNAL")]),s._v(" 声明，并且一般搭配 "),n("code",[s._v("LOCATION")]),s._v(" 指定数据的具体路径。")]),s._v(" "),n("p",[s._v("使用 "),n("code",[s._v("DESCRIBE FORMATTED ${table_name}")]),s._v(" 查看表的描述信息，进而查看表的类型，其中 Table Type 为 "),n("code",[s._v("EXTERNAL_TABLE")]),s._v(" 表示的就是外部表。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(961),alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("内外表的其他区别")])]),s._v(" "),n("p",[s._v("除了数据管理的区别之外，它们还有其他区别：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(962),alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("内外表互相转换")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 修改表为外部表")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" tblproperties "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'EXTERNAL'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'TRUE'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询表，此时 Table Type 一栏中已经变为了 EXTERNAL_TABLE，代表外部表")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),s._v(" FORMATTED hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 设置表为内部表，此时 Table Type 一栏中变为了 MANAGED_TABLE，代表内部表，也就是受管理的表")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" tblproperties "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'EXTERNAL'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'FALSE'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"hive-分区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hive-分区"}},[s._v("#")]),s._v(" Hive 分区")]),s._v(" "),n("p",[n("strong",[s._v("分区概念")])]),s._v(" "),n("p",[s._v("之前我们提到过分区这个概念，分区其实是为了帮助数据查找的一种手段。")]),s._v(" "),n("p",[s._v("比如，我们将一年的数据根据月份划分为十二个分区，在物理上，不同分区的数据会存储到 HDFS 中的不同文件夹下面。这样一来，查询某个月份的分区就只需要从某个文件夹下面查找，避免了全部数据的扫描。")]),s._v(" "),n("p",[s._v("分区需要使用 "),n("code",[s._v("PARTITIONED BY")]),s._v(" 关键字指定按照什么字段进行分区：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name string\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" PARTITIONED "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("role string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROW")]),s._v(" FORMAT DELIMITED\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FIELDS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TERMINATED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("上面这张表 hero 存在 id 和 name 两个字段，使用 "),n("code",[s._v("role")]),s._v(' 字段进行分区，使用 DELIMITED 代表的 LazySimpleSerDe 进行文件读写，使用 "\\t" 作为分隔符。')]),s._v(" "),n("p",[s._v("需要注意的是，分区字段 "),n("code",[s._v("role")]),s._v(" 不能是表中已经存在的字段，因为最终分区字段也会以一种虚拟字段的形式显示在表结构上。")]),s._v(" "),n("p",[s._v("分区也分为静态分区和动态分区：")]),s._v(" "),n("ul",[n("li",[s._v("静态分区：在创建表的时候手动指定分区字段和分区值。")]),s._v(" "),n("li",[s._v("动态分区：基于查询结果动态推断出分区字段和分区值。")])]),s._v(" "),n("p",[n("strong",[s._v("静态分区")])]),s._v(" "),n("p",[s._v("之前已经说明了，静态分区是手动指定的分区字段和分区值，那么首先就要创建一个表：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      name string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      hp_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      mp_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      attack_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      defense_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      attack_range string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      role_main string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      role_assist string\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" PARTITIONED "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("role string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROW")]),s._v(" FORMAT DELIMITED\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FIELDS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TERMINATED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("之后进行数据的导入，在导入时指定字段的静态分区，语法为："),n("code",[s._v("LOAD DATA [LOCAL] INPATH '' INTO TABLE ${table_name} PARTITION (${partition_key}=${partition_value})")])]),s._v(" "),n("p",[s._v("LOAD 表示加载数据，之后详解。LOCAL 则表示从本地文件系统加载，默认是 HDFS 加载。")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOAD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATA")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOCAL")]),s._v(" INPATH "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/tmp/hero/archer.txt'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("role"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'archer'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOAD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATA")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOCAL")]),s._v(" INPATH "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/tmp/hero/assassin.txt'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("role"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'assassin'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOAD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATA")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOCAL")]),s._v(" INPATH "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/tmp/hero/mage.txt'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("role"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mage'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOAD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATA")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOCAL")]),s._v(" INPATH "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/tmp/hero/support.txt'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("role"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'support'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOAD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATA")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOCAL")]),s._v(" INPATH "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/tmp/hero/tank.txt'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("role"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tank'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOAD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATA")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOCAL")]),s._v(" INPATH "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/tmp/hero/warrior.txt'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("role"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'warrior'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("以上情况加载了文件，在 HDFS 上将会有分区，分别存储对应的文件：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(963),alt:""}})]),s._v(" "),n("p",[n("img",{attrs:{src:a(964),alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("动态分区")])]),s._v(" "),n("p",[s._v("启用动态分区，首先要在 hive 的 session 中设置两个参数：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("-- 开启动态分区\nSET hive.exec.dynamic.partition=true;\n-- 指定动态分区的模式为非严格模式，非严格模式下不必有静态分区；严格模式设置为 strict，要求至少有一个分区为静态分区。\nSET hive.exec.dynamic.partition.mode=nonstrict;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("执行动态分区，其实是执行的动态分区 + 插入，核心就是 "),n("code",[s._v("INSERT + SELECT")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 创建表，这里的内容和之前的静态分区的 hero 表相同")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" dynamicHero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    hp_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    mp_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    attack_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    defense_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    attack_range string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    role_main string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    role_assist string\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" PARTITIONED "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("role string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROW")]),s._v(" FORMAT DELIMITED\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FIELDS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TERMINATED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 执行动态分区插入，核心思想是使用 INSERT + SELECT")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 分区值将会通过返回字段的位置确定，普通的为 tmp.*，之后的 role 就是 tmp.role_main")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" dynamicHero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("role"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hp_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mp_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("attack_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("defense_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("attack_range"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("role_main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("role_assist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("role_main "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" hero tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("动态分区在插入的时候会使用位置自动推断。")]),s._v(" "),n("p",[s._v("之前讲过，分区字段 hero 在表现上也会占用一个字段，也就是说从我们的角度看，hero 表有四个字段：id、name、role_main、role。")]),s._v(" "),n("p",[s._v("以上这段 SQL 在查询的时候，首先会查询出原有的三个字段，分别对应着 id、name、role_main，之后我们查询出的 tmp.role_main 将会被分配到 hero 字段上，所以在分配分区的时候其实是根据 role_main 来分配的。")]),s._v(" "),n("p",[n("strong",[s._v("分区的本质")])]),s._v(" "),n("p",[s._v("之前说过，分区的本质其实就是将分区分为了多个文件夹，数据存放到不同的分区文件夹中，分区文件夹的名字为 "),n("code",[s._v("分区字段=分区值")]),s._v("。")]),s._v(" "),n("p",[s._v("分区字段是虚拟字段，数据不会存储在底层文件中。分区本质上是一种优化手段，是可选项。Hive 支持在分区的基础上继续分区，也就是多重分区。")]),s._v(" "),n("p",[n("strong",[s._v("多重分区")])]),s._v(" "),n("p",[s._v("在多重分区下，分区是一种递进关系，在物理上表现为：在分区文件夹下面继续划分子分区文件夹。")]),s._v(" "),n("p",[s._v("创建多重分区只需要指定多个 partition，比如："),n("code",[s._v("CREATE TABLE hero(...) PARTITIONED BY (partition1 string, partition2 string, ...)")])]),s._v(" "),n("p",[s._v("常见的多重分区，例如按照地区划分（省市县）、按照时间划分（年月日）等。")]),s._v(" "),n("h3",{attrs:{id:"hive-分桶"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hive-分桶"}},[s._v("#")]),s._v(" Hive 分桶")]),s._v(" "),n("p",[n("strong",[s._v("分桶概念")])]),s._v(" "),n("p",[s._v("分桶表也叫做桶表，来源于 bucket。Hive 的分桶也是一种优化手段，不过和分区不同，分区是将数据分到多个文件夹下存储，但分区文件夹下面还是一份文件；分桶则是将一个分区中的数据分为多个文件。")]),s._v(" "),n("p",[s._v("桶的编号相同就会分到同一个 bucket 中。")]),s._v(" "),n("p",[n("strong",[s._v("分桶语法")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CLUSTERED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("${col_name}"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("SORTED "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("${col_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ASC")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),s._v("}"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" N BUCKETS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("code",[s._v("CLUSTERED BY (${col_name}) SORTED BY (${col_name ASC|DESC})")]),s._v(" 表示根据什么字段进行分，"),n("code",[s._v("INTO N BUCKETS")]),s._v(" 表示分为 N 桶。")]),s._v(" "),n("p",[s._v("注意，和分区表不同，分桶表的字段必须是表中已经存在的字段。")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 分桶，分桶表的字段必须为表中已经存在的字段")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 按照 ID 划分为 5 桶")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" bucketHero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    hp_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    mp_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    attack_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    defense_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    attack_range string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    role_main string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    role_assist string\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CLUSTERED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" BUCKETS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" bucketHero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" hp_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mp_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attack_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" defense_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attack_range"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" role_main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" role_assist "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 按照 ID 划分为 5 桶，并且按照 attack_max 进行排序")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" bucketHeroWithSort "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    hp_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    mp_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    attack_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    defense_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    attack_range string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    role_main string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    role_assist string\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CLUSTERED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" SORTED "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("attack_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" BUCKETS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" bucketHeroWithSort "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" hp_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mp_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attack_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" defense_max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" attack_range"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" role_main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" role_assist "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("p",[n("strong",[s._v("分桶表的好处")])]),s._v(" "),n("ol",[n("li",[s._v("减少全表扫描。")]),s._v(" "),n("li",[s._v("JOIN 时可以减少笛卡尔积。")]),s._v(" "),n("li",[s._v("数据量特别大时，可以使用分桶对数据进行抽样检测。")])]),s._v(" "),n("h3",{attrs:{id:"hive-事务和视图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hive-事务和视图"}},[s._v("#")]),s._v(" Hive 事务和视图")]),s._v(" "),n("p",[n("strong",[s._v("事务")])]),s._v(" "),n("p",[s._v("Hive 的核心目标是为了数据的查询和分析用的，所以在设计之初不支持事务。")]),s._v(" "),n("p",[s._v("但是有些数据仍然有可能会出现一些错误，这些数据就需要修改和删除，那么从 Hive0.14 开始，Hive 就开始支持更新删除以及事务操作。")]),s._v(" "),n("p",[s._v("虽然 Hive 现在支持事务，但是 Hive 本质上不是用来做这个的，所以限制会比较多，并且不像 MySQL 那样方便：")]),s._v(" "),n("ul",[n("li",[s._v("所有语言操作都是自动提交的，不支持手动事务。")]),s._v(" "),n("li",[s._v("默认情况下为关闭，必须手动配置开启。")]),s._v(" "),n("li",[s._v("必须是分桶表才可以支持事务功能。")]),s._v(" "),n("li",[s._v("表的参数 "),n("code",[s._v("transactional")]),s._v(" 必须为 true。")]),s._v(" "),n("li",[s._v("外部表不可能成为 ACID 表。")])]),s._v(" "),n("p",[n("strong",[s._v("视图")])]),s._v(" "),n("p",[s._v("Hive 中的视图分为两种，一种是普通视图（view），一种是物化视图（materialized view）。")]),s._v(" "),n("p",[s._v("普通视图是用来简化操作的，比如我们有很复杂的查询语句，每次都写一遍太过复杂，就可以创建这样一种视图来简化操作，每次查询这个视图的时候就相当于执行了之前的复杂查询语句。")]),s._v(" "),n("p",[s._v("普通视图是虚表，不会提高查询性能，也没有缓存记录，当然也不可以进行数据的插入或者更改：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 创建视图")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VIEW")]),s._v(" v_hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 从已有的视图中创建新的视图")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VIEW")]),s._v(" v_hero_inside "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" v_hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 展示视图")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" VIEWS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看视图定义")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" v_hero_inside"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除视图，因为视图是虚拟的，所以不会对数据进行操作")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VIEW")]),s._v(" v_hero_inside"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 改变视图定义")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VIEW")]),s._v(" v_hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" attack_max "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[n("strong",[s._v("物化视图")])]),s._v(" "),n("p",[s._v("物化视图和视图不同，这里的物化视图其实就可以看作是传统关系型数据库的物化视图。物化视图是一个包含查询结果的数据库对象，是实表，是有真实数据的，在查询的时候可以预先计算保存，然后避免耗时操作。")]),s._v(" "),n("p",[s._v("当然，因为通过了预计算得到了结果，当然需要一定的存储空间。Hive3.0 开始引入了物化视图，结果可以存储到 Hive 中，也可以存储到自定义的系统中。")]),s._v(" "),n("p",[s._v("Hive 引入物化视图就是为了抛弃 index 索引的语法，逐渐转为物化视图加快存储速度，但是当前特性还不是很多，只能说未来可期。")]),s._v(" "),n("h2",{attrs:{id:"ddl-其余相关操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ddl-其余相关操作"}},[s._v("#")]),s._v(" DDL 其余相关操作")]),s._v(" "),n("h3",{attrs:{id:"数据库操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作"}},[s._v("#")]),s._v(" 数据库操作")]),s._v(" "),n("p",[n("strong",[s._v("数据库创建")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SCHEMA")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" demo\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"注释"')]),s._v("\nLOCATION "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${HDFS LOCATION}"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" DBPROPERTIES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("${属性名}"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("${属性值}"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- `COMMENT`：注释")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- `LOCATION`：指定存储到 HDFS 的位置，默认采用配置文件中的 `/user/hive/warehouse`")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- `WITH DBPROPERTIES`：指定一些数据库的属性配置。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SCHEMA")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" demo\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CREATE THE DEMO DATABASE"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" DBPROPERTIES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"author"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"causes"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("strong",[s._v("数据展示信息")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 展示更多信息，DESCRIBE DATABASE/SCHEMA EXTENDED ${table_name};")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- EXTENDED 用于展示更多信息")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESCRIBE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SCHEMA")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXTENDED")]),s._v(" demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("切换数据库")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- USE ${table_name}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USE")]),s._v(" demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("删除数据库")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除数据库，DROP DATABASE IF EXISTS ${demo} RESTRICT | CASCADE")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- RESTRICT：仅仅在数据库为空（没有表）才可以删除，默认值")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- CASCADE：强制删除")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" demo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("strong",[s._v("更改与当前数据库关联的元数据信息")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- ALTER DATABASE | SCHEMA ${db_name} SET DBPROPERTIES (${property_name}=${property_value})")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" demo "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" DBPROPERTIES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"author"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"causes"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更改用户所有者，ALTER DATABASE | SCHEMA ${db_name} SET OWNER USER | ROLE ${user};")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SCHEMA")]),s._v(" demo "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" OWNER ROLE causes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更改数据库位置，ALTER DATABASE | SCHEMA ${db_name} SET LOCATION ${HDFS_PATH}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" demo "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" LOCATION "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${HDFS_PATH}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"表操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#表操作"}},[s._v("#")]),s._v(" 表操作")]),s._v(" "),n("p",[n("strong",[s._v("查看表")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看表，DESCRIBE EXTENDED | FORMATTED ${table_name}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--  EXTENDED：Thrift 序列化形式展示表的元数据")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- FORMATTED：表格形式展示元数据")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESCRIBE")]),s._v(" FORMATTED hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("strong",[s._v("删除表")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除表，DROP TABLE IF EXISTS ${table_name} PURGE")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 普通情况下，表数据不会被立刻删除，而是进入垃圾桶（假如已经配置了垃圾桶，则会进入 .Trash/Current 目录），假如指定了 PURGE 则会跳过垃圾桶，立刻删除")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" hero "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PURGE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("清空表")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- TRUNCATE TABLE ${table_name}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 清空表的数据，但是保留元数据，假如 HDFS 启动了垃圾桶则会进入垃圾桶，否则会被立刻删除")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRUNCATE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("修改表")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更改表名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RENAME")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TO")]),s._v(" new_table_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更改表属性")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" TBLPROPERTIES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property_name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" property_value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更改表注释")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" student "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" TBLPROPERTIES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'comment'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new comment for student table"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更改 SerDe 属性")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" SERDE serde_class_name "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" SERDEPROPERTIES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property_name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" property_value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),s._v(" partition_spec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" SERDEPROPERTIES serde_properties"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" SERDEPROPERTIES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'field.delim'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--移除 SerDe 属性")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),s._v(" partition_spec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" UNSET SERDEPROPERTIES "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更改表的文件存储格式 该操作仅更改表元数据。现有数据的任何转换都必须在 Hive 之外进行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" FILEFORMAT file_format"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更改表的存储位置路径")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" LOCATION "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new location"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更改列名称/类型/位置/注释")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" test_change CHANGE a a1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'this is column a1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 添加 / 替换列")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 使用 ADD COLUMNS，您可以将新列添加到现有列的末尾但在分区列之前")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- REPLACE COLUMNS 将删除所有现有列，并添加新的列集")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("REPLACE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLUMNS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col_name data_type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("h3",{attrs:{id:"hive-show-展示语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hive-show-展示语法"}},[s._v("#")]),s._v(" Hive show 展示语法")]),s._v(" "),n("p",[s._v("SHOW 相关的语句提供了一系列的，查询 Hive Metastore 的命令，可以帮助用户查询相关信息，在这里我们讲解一下比较常见的内容。")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 展示某个数据库中的所有表，不填 IN xxx 则为当前数据库。视图也是类似。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLES")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 展示某张表的分区信息")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" PARTITIONS hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 展示表的扩展信息，例如名称、所属用户、位置、inputformat、outputformat 等")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXTENDED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 展示表的属性信息，例如 是否为外部表、最后修改用户等")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" TBLPROPERTIES hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 展示表中的所有列，包括分区列")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLUMNS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 展示可用函数，包括内置和自定义的")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" FUNCTIONS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看表信息，可以使用 FORMATTED 格式化")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXTENDED")]),s._v(" hero"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看数据库相关信息")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESCRIBE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports},955:function(s,t,a){s.exports=a.p+"assets/img/2022-02-08-11-57-50.bf4b7ce7.png"},956:function(s,t,a){s.exports=a.p+"assets/img/2022-02-08-11-58-22.510f3702.png"},957:function(s,t,a){s.exports=a.p+"assets/img/2022-02-08-11-58-50.f6fc6440.png"},958:function(s,t,a){s.exports=a.p+"assets/img/2022-02-08-12-15-31.ddceb6e5.png"},959:function(s,t,a){s.exports=a.p+"assets/img/2022-02-10-13-46-46.660fcc09.png"},960:function(s,t,a){s.exports=a.p+"assets/img/2022-02-10-13-57-48.2f5c9402.png"},961:function(s,t,a){s.exports=a.p+"assets/img/2022-02-10-14-01-09.4a6f2f78.png"},962:function(s,t,a){s.exports=a.p+"assets/img/2022-02-10-14-02-32.e13c8493.png"},963:function(s,t,a){s.exports=a.p+"assets/img/2022-02-24-22-27-31.d2cea4dd.png"},964:function(s,t,a){s.exports=a.p+"assets/img/2022-02-24-22-27-49.f75b0556.png"}}]);