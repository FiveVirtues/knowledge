(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{1030:function(s,e,a){"use strict";a.r(e);var t=a(1),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("p",[s._v("docker 和传统的虚拟机不同，传统虚拟机是先虚拟出一套硬件，然后在硬件上运行一个操作系统，之后在操作系统上运行进程。")]),s._v(" "),t("p",[s._v("docker 中的进程直接运行在宿主内核中，容器中没有自己的内核，也没有虚拟的硬件，因此更加轻便，启动速度更快。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(734),alt:""}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(735),alt:""}})]),s._v(" "),t("p",[s._v("Docker 中有几个基本概念：")]),s._v(" "),t("ul",[t("li",[s._v("镜像：没有任何动态数据，可以看成是 Java 中类的概念。")]),s._v(" "),t("li",[s._v("容器：运行中的实体，可以看成是 Java 中，类实例化之后的对象。")]),s._v(" "),t("li",[s._v("仓库：仓库中包含多个标签，每一个标签赌赢一个镜像。")]),s._v(" "),t("li",[s._v("Docker Repository：可以包含多个仓库。本质上是一个集中的存储、分发镜像的服务（最常用的是 Docker 官方推出的 Docker Hub）。")])]),s._v(" "),t("h2",{attrs:{id:"镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像"}},[s._v("#")]),s._v(" 镜像")]),s._v(" "),t("p",[t("strong",[s._v("获取")])]),s._v(" "),t("p",[s._v("Docker Hub 上有大量的镜像可以用，使用 "),t("code",[s._v("docker pull [options] [address [:port]/]仓库名称 [:tag]")]),s._v("，具体可以通过 "),t("code",[s._v("docker pull --help")]),s._v(" 看到。")]),s._v(" "),t("ul",[t("li",[s._v("Docker 地址格式为 "),t("code",[s._v("域名/IP :端口号")]),s._v("，默认的地址为 Docker Hub（"),t("code",[s._v("docker.io")]),s._v("）。")]),s._v(" "),t("li",[s._v("仓库名称格式："),t("code",[s._v("用户名/软件名")]),s._v("，不指定则为官方镜像 "),t("code",[s._v("library")]),s._v("。")])]),s._v(" "),t("p",[s._v("例如："),t("code",[s._v("docker pull ubuntu:18.04")]),s._v(" -> "),t("code",[s._v("docker.io/library/ubuntu:18.04")])]),s._v(" "),t("p",[t("strong",[s._v("列出")])]),s._v(" "),t("p",[s._v("使用命令 "),t("code",[s._v("docker image")]),s._v(" 列出已经下载下来的镜像。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@bigdata]~# docker images\nREPOSITORY                                    TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/gitea/gitea                         latest              423b8c425d76        4 weeks ago         241 MB\ndocker.io/jgraph/drawio                       latest              71f9c9180be6        8 weeks ago         531 MB\ndocker.io/rocket.chat                         latest              00e7c59a3559        2 months ago        828 MB\nregistry.rocket.chat/rocketchat/rocket.chat   latest              97cd6f80ccc2        2 months ago        879 MB\ndocker.io/diygod/rsshub                       latest              e8c178c7e38e        4 months ago        231 MB\ndocker.io/mongo                               4.0                 e305b5d51c0a        4 months ago        430 MB\ndocker.io/elasticsearch                       7.4.2               b1179d41a7b4        2 years ago         855 MB\ndocker.io/mobz/elasticsearch-head             5                   b19a5c98e43b        5 years ago         824 MB\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("其中包含了：仓库名称、标签、镜像 ID、创建时间、占用空间。")]),s._v(" "),t("p",[s._v("在这里，占用空间和 Docker Hub 中展示的可能不同，因为 Docker Hub 展示的是压缩之后的体积，在镜像下载和上传过程中是压缩状态。")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("可以通过命令 "),t("code",[s._v("docker system df")]),s._v(" 可以查看当前镜像、容器、本地卷的占用空间")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@bigdata]~# docker system df\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              8                   7                   4.751 GB            828.5 MB (17%)\nContainers          8                   2                   173.2 MB            106.1 MB (61%)\nLocal Volumes       7                   4                   87.61 MB            87.6 MB (99%)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("hr"),s._v(" "),t("p",[s._v("在镜像中，可能会有一些特殊镜像，仓库名和标签都为 "),t("code",[s._v("<none>")]),s._v("，可能会有很多原因导致（比如 build 失败、官方转移新镜像等），这些叫做虚悬镜像，没什么价值，可以删除。")]),s._v(" "),t("hr"),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("基本操作示例")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 普通的 docker images 显示所有镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@bigdata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("~"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images")]),s._v("\nREPOSITORY                                    TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/gitea/gitea                         latest              423b8c425d76        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("241")]),s._v(" MB\ndocker.io/jgraph/drawio                       latest              71f9c9180be6        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" weeks ago         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("531")]),s._v(" MB\ndocker.io/rocket.chat                         latest              00e7c59a3559        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" months ago        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("828")]),s._v(" MB\nregistry.rocket.chat/rocketchat/rocket.chat   latest              97cd6f80ccc2        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" months ago        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("879")]),s._v(" MB\ndocker.io/diygod/rsshub                       latest              e8c178c7e38e        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" months ago        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("231")]),s._v(" MB\ndocker.io/mongo                               "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.0")]),s._v("                 e305b5d51c0a        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" months ago        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("430")]),s._v(" MB\ndocker.io/elasticsearch                       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.4")]),s._v(".2               b1179d41a7b4        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" years ago         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("855")]),s._v(" MB\ndocker.io/mobz/elasticsearch-head             "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("                   b19a5c98e43b        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" years ago         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("824")]),s._v(" MB\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以指定仓库，单独显示某个仓库下的镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@bigdata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("~"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images rocket.chat")]),s._v("\nREPOSITORY              TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/rocket.chat   latest              00e7c59a3559        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" months ago        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("828")]),s._v(" MB\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定仓库 + 标签显示镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@bigdata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("~"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images rocket.chat:latest")]),s._v("\nREPOSITORY              TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/rocket.chat   latest              00e7c59a3559        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" months ago        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("828")]),s._v(" MB\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 展示在 rocket.chat 这个镜像之后的镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@bigdata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("~"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images -f since=rocket.chat")]),s._v("\nREPOSITORY                TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/gitea/gitea     latest              423b8c425d76        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("241")]),s._v(" MB\ndocker.io/jgraph/drawio   latest              71f9c9180be6        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" weeks ago         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("531")]),s._v(" MB\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 展示在 rocket.chat 之前的镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@bigdata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("~"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images -f before=rocket.chat")]),s._v("\nREPOSITORY                                    TAG                 IMAGE ID            CREATED             SIZE\nregistry.rocket.chat/rocketchat/rocket.chat   latest              97cd6f80ccc2        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" months ago        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("879")]),s._v(" MB\ndocker.io/diygod/rsshub                       latest              e8c178c7e38e        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" months ago        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("231")]),s._v(" MB\ndocker.io/mongo                               "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.0")]),s._v("                 e305b5d51c0a        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" months ago        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("430")]),s._v(" MB\ndocker.io/elasticsearch                       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.4")]),s._v(".2               b1179d41a7b4        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" years ago         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("855")]),s._v(" MB\ndocker.io/mobz/elasticsearch-head             "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("                   b19a5c98e43b        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" years ago         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("824")]),s._v(" MB\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 假如构建时指定了 label，可以通过它来展示镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@bigdata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("~"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images -f label=latest")]),s._v("\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只展示镜像 ID")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@bigdata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("~"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images -q")]),s._v("\n423b8c425d76\n71f9c9180be6\n00e7c59a3559\n97cd6f80ccc2\ne8c178c7e38e\ne305b5d51c0a\nb1179d41a7b4\nb19a5c98e43b\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据模板展示镜像，需要用到 Go 的模板语法: https://gohugo.io/templates/introduction/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@bigdata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("~"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# docker image ls --format "{{.ID}}: {{.Repository}}"')]),s._v("\n423b8c425d76: docker.io/gitea/gitea\n71f9c9180be6: docker.io/jgraph/drawio\n00e7c59a3559: docker.io/rocket.chat\n97cd6f80ccc2: registry.rocket.chat/rocketchat/rocket.chat\ne8c178c7e38e: docker.io/diygod/rsshub\ne305b5d51c0a: docker.io/mongo\nb1179d41a7b4: docker.io/elasticsearch\nb19a5c98e43b: docker.io/mobz/elasticsearch-head\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br")])])]),s._v(" "),t("p",[t("strong",[s._v("删除")])]),s._v(" "),t("p",[s._v("使用 "),t("code",[s._v("docker rmi [options] 镜像1 [镜像2 镜像3 ……]")]),s._v("，其中镜像可以是 ID、名称等。")]),s._v(" "),t("p",[s._v("我们删除镜像时，其实是删除某个标签的镜像，所以首先满足条件的镜像都会取消标签，是 "),t("code",[s._v("Untagged")]),s._v(" 操作，之后才会删除镜像。")]),s._v(" "),t("p",[s._v("但是假如一个镜像有多个标签，那么我们这个删除操作可能只是删除了某个标签而已，只有删除了所有的标签，才会触发删除行为。")]),s._v(" "),t("p",[s._v("还有一种情况，就是当一个容器使用这个镜像时，这个镜像不会删除，因为容器正在运行，而且容易以镜像为基础，所以不会删除。")]),s._v(" "),t("p",[s._v("我们也可以使用查询镜像命令来配合删除镜像："),t("code",[s._v("docker rm $(docker images)")])]),s._v(" "),t("h2",{attrs:{id:"容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[s._v("#")]),s._v(" 容器")]),s._v(" "),t("p",[t("strong",[s._v("基本操作")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker run 镜像")]),s._v("：启动容器。")]),s._v(" "),t("li",[t("code",[s._v("docker stop 容器")]),s._v("：终止容器。")]),s._v(" "),t("li",[t("code",[s._v("docker start 容器")]),s._v("：启动已经终止的容器。")]),s._v(" "),t("li",[t("code",[s._v("docker run -it 镜像 /bin/bash")]),s._v("：启动并进入容器，使用 bash 交互。")]),s._v(" "),t("li",[t("code",[s._v("docker run -d 镜像")]),s._v("：后台运行，会返回容器 id。")]),s._v(" "),t("li",[t("code",[s._v("docker logs 镜像")]),s._v("：获取容器输出。")]),s._v(" "),t("li",[t("code",[s._v("docker rm 镜像")]),s._v("：删除镜像。")])]),s._v(" "),t("p",[s._v("当启动容器时，运行过程包括：")]),s._v(" "),t("ol",[t("li",[s._v("检查本地是否存在镜像，没有则下载。")]),s._v(" "),t("li",[s._v("利用镜像创建并启动容器。")]),s._v(" "),t("li",[s._v("分配文件系统，并在只读的镜像层外挂载一层可读可写层。")]),s._v(" "),t("li",[s._v("从网桥接口中桥接一个虚拟接口到容器中。")]),s._v(" "),t("li",[s._v("分配 ip 给容器。")]),s._v(" "),t("li",[s._v("执行用户指定的程序。")]),s._v(" "),t("li",[s._v("程序完成后终止。")])]),s._v(" "),t("p",[s._v("所以可以看到，容器默认是一次性的，任务运行完成即终止，要想让容器不终止，需要一直保持执行状态。")]),s._v(" "),t("p",[t("strong",[s._v("进入运行中的容器")])]),s._v(" "),t("p",[t("code",[s._v("docker exec -it 容器ID 终端")]),s._v("，例如："),t("code",[s._v("docker exec -it adca7acf3c41 bash")]),s._v("。")]),s._v(" "),t("p",[s._v("其中 "),t("code",[s._v("-i")]),s._v(" 表示即使没有连接，也要保持 STDIN 打开，"),t("code",[s._v("-t")]),s._v(" 是分配伪终端。")]),s._v(" "),t("p",[t("strong",[s._v("导入导出")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker export 容器 > container.tar")]),s._v("：将容器导出为本地文件。")]),s._v(" "),t("li",[t("code",[s._v("docker import container.tar test:1.0")]),s._v("：将本地文件导入为镜像，也可以指定某个 url 或者目录来导入。")])]),s._v(" "),t("h2",{attrs:{id:"dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" Dockerfile")]),s._v(" "),t("p",[s._v("Docker 镜像是一种分层结构，这种结构的好处是：多个镜像可能会用到某一个相同的层，这样就无需多次 pull。")]),s._v(" "),t("p",[s._v("那么对于镜像来说，即使 DockerHub 中有很多优秀镜像，但是不可能完全解决需求，因此我们需要自定义镜像。")]),s._v(" "),t("p",[s._v("Dockerfile 是一个文本文件，其内包含了一条条的 指令（Instruction），每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。")]),s._v(" "),t("p",[t("strong",[s._v("FROM")])]),s._v(" "),t("p",[s._v("定制镜像，肯定是以一个镜像为基础，而 "),t("code",[s._v("FROM")]),s._v(" 关键字则指定了以哪一个镜像为基础。")]),s._v(" "),t("p",[s._v("有一些镜像可以直接拿来用，比如 "),t("code",[s._v("nginx")]),s._v("、"),t("code",[s._v("redis")]),s._v("、"),t("code",[s._v("mongo")]),s._v("、"),t("code",[s._v("tomcat")]),s._v(" 等，也有一些方便开发使用，例如 "),t("code",[s._v("node")]),s._v("、"),t("code",[s._v("openjdk")]),s._v("、"),t("code",[s._v("python")]),s._v("，甚至还有一些系统镜像 "),t("code",[s._v("ubuntu")]),s._v("、"),t("code",[s._v("centos")]),s._v("、"),t("code",[s._v("debian")]),s._v(" 等。")]),s._v(" "),t("p",[t("strong",[s._v("RUN")])]),s._v(" "),t("p",[s._v("用于执行命令，有两种格式：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("RUN 命令")]),s._v("："),t("code",[s._v("RUN echo 'HELLO WORLD'")])]),s._v(" "),t("li",[t("code",[s._v("RUN ['可执行文件', '参数', '参数']")])])]),s._v(" "),t("p",[s._v("每个 "),t("code",[s._v("RUN")]),s._v(" 都可以看做是一个新的进程执行环境，所以假如使用")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("RUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /app\nRUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HELLO"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world.txt"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("其实不会进入到 "),t("code",[s._v("/app")]),s._v(" 中去创建文件，结果是失败的。因为在 shell 中，这两条命令是处于同一个环境下的，但是在 docker 中，这是两个环境，第二个明显不会集成第一个。")]),s._v(" "),t("p",[s._v("要解决这个问题，需要使用 "),t("code",[s._v("WORKDIR")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("构建镜像")])]),s._v(" "),t("p",[s._v("下面使用 "),t("code",[s._v("Dockerfile")]),s._v(" 文件：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("FROM nginx\nRUN echo '<h1>HELLO Docker</h1>' > /usr/share/nginx/html/index.html\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("执行构建镜像命令："),t("code",[s._v("docker build -t nginx:test .")]),s._v(" 代表构建了一个镜像，名称为 "),t("code",[s._v("nginx")]),s._v("，标签为 "),t("code",[s._v("test")])]),s._v(" "),t("p",[s._v("镜像构建时，最后一个点，这个 "),t("code",[s._v(".")]),s._v(" 代表的是当前目录，而 "),t("code",[s._v("Dockerfile")]),s._v(" 就是当前目录，更确切的说，是在指定上下文环境。")]),s._v(" "),t("p",[s._v("提到上下文，首先要提到的就是 Docker 的架构。Docker = Docker 引擎（服务端守护进程）+ 客户端工具。")]),s._v(" "),t("p",[s._v("我们在执行命令时，本质上是通过客户端发送给 Docker 引擎，然后 Docker 引擎去执行命令。构建镜像的命令也是如此。")]),s._v(" "),t("p",[s._v("Docker 客户端会将上下文环境中指定下的所有内容都打包交给 Docker 引擎，然后 Docker 引擎去解析上下文环境中的内容进行构建。")]),s._v(" "),t("p",[s._v("之后我们还会学到 "),t("code",[s._v("COPY")]),s._v(" ，假如指定 "),t("code",[s._v("COPY ./package.json /app/")]),s._v("，这条命令的意思是将上下文中的 "),t("code",[s._v("package.json")]),s._v(" 放到 "),t("code",[s._v("app")]),s._v(" 下，而不是 Dockerfile 文件所在位置或构建命令执行的位置下的 "),t("code",[s._v("package.json")]),s._v("。")]),s._v(" "),t("p",[s._v("假如我们对上下文环境错误地理解为 Dockerfile 所在的目录，有可能会出现 "),t("code",[s._v("COPY ../package.json")]),s._v(" 失败的情况，因为这些路径已经超过了上下文环境的范围。")]),s._v(" "),t("p",[s._v("或者，假如有些人将 "),t("code",[s._v("Dockerfile")]),s._v(" 文件直接放到了根目录下，那么就相当于将整个根目录打包送到 Docker 引擎，这样明显是错误的。")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("其实上下文和 "),t("code",[s._v("Dockerfile")]),s._v(" 文件的所在位置并没有因果关系。")]),s._v(" "),t("p",[s._v("假如我们不指定 Dockerfile 文件，默认会将 "),t("code",[s._v("Dockerfile")]),s._v(" 作为构建镜像的文件，而事实上，我们可以使用 "),t("code",[s._v("-f ../a.txt")]),s._v(" 这种方式，手动指定某个文件。并且还可以额外指定上下文，但是上下文中必须能够找到指定的 "),t("code",[s._v("Dockerfile")]),s._v(" 文件。")]),s._v(" "),t("p",[s._v("比如："),t("code",[s._v("docker build -t nginx:v1 -f hello/a.txt .")])]),s._v(" "),t("p",[t("strong",[s._v("COPY")])]),s._v(" "),t("p",[t("code",[s._v("COPY")]),s._v("，就是将文件从构建的上下文中拷贝到新的一层的镜像内的目标位置，可以使用 GO 的"),t("a",{attrs:{href:"https://pkg.go.dev/path/filepath#Match",target:"_blank",rel:"noopener noreferrer"}},[s._v("通配符"),t("OutboundLink")],1),s._v("表达式。例如：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("COPY hom* /dir/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("特别强调文件构建上下文，这里的上下文和 Dockerfile 所在位置并没有直接关系，只是说上下文中必须可以找到 Dockerfile 文件。")]),s._v(" "),t("p",[s._v("目标路径是容器内的路径，建议使用绝对路径，不过也可以使用相对路径，这个相对路径相对的是工作目录（使用关键字 "),t("code",[s._v("WORKDIR")]),s._v(" 指定）。")]),s._v(" "),t("p",[s._v("在使用 COPY 命令时，目标的各种属性都会保留，例如权限、文件变更时间。在进行 GIT 管理的时候很有用。")]),s._v(" "),t("p",[s._v("可以使用 "),t("code",[s._v("--chown=<user>:<group>")]),s._v(" 来变更所属用户和组，例如：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("COPY --chown"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("causes:causes hom* /dir/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("假如指定原路径为文件夹，那么不会复制文件夹，而是会将文件夹中的内容复制到目标路径下。")]),s._v(" "),t("p",[t("strong",[s._v("ADD")])]),s._v(" "),t("p",[s._v("类似 COPY，但有所不同。它比 COPY 更加高级，比如原路径可以为一个 URL（下载后权限自动设为 600，更改则需要一层的 RUN 去调整）。")]),s._v(" "),t("p",[s._v("假如原路径为一个 tar 压缩文件，并且压缩格式为 "),t("code",[s._v("gzip")]),s._v("、"),t("code",[s._v("bzip2")]),s._v("、"),t("code",[s._v("xz")]),s._v(" 之一，此命令会自动解压缩到目标路径上。")]),s._v(" "),t("p",[s._v("一般的最佳实践是：多用 COPY，少用 ADD。因为 COPY 功能单一，语义明确。ADD 虽然功能多一些，但是语义不明确，行为也不清晰。并且 ADD 会令镜像构建缓存失效，从而影响构建速度。")]),s._v(" "),t("p",[s._v("我们可以在文件复制时使用 COPY，仅在文件需要自动解压缩时使用 ADD。")]),s._v(" "),t("p",[t("strong",[s._v("CMD")])]),s._v(" "),t("p",[s._v("CMD 的目的是在容器启动时指定容器启动程序和程序的参数，可使用两种方式：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell 格式，会被解析为 exec 格式，会主动包一层 `sh -c`，变为下面的 exec 格式")]),s._v("\nCMD "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo HELLO"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec 格式，推荐使用，注意一定要使用双引号（因为会被解析为 JSON 数组）")]),s._v("\nCMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sh"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo HELLO"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("注意，Docker 和传统的虚拟机有所不同，容器中的应用没有后台服务的概念，都是在前台执行。容器是为了主进程存在的，主进程退容器就结束运行。")]),s._v(" "),t("p",[s._v("所以假如我们使用 "),t("code",[s._v("CMD service nginx start")]),s._v("，其实是在执行 "),t("code",[s._v('CMD ["sh", "-c", "service nginx start"]')]),s._v("，这里的主进程其实是 "),t("code",[s._v("sh")]),s._v("，并不是 "),t("code",[s._v("nginx")]),s._v("。")]),s._v(" "),t("p",[s._v("正确的做法是直接执行 nginx 可执行文件，并且要求以前台形式运行："),t("code",[s._v('CMD ["nginx", "-g", "daemon: off;"]')]),s._v("。")]),s._v(" "),t("p",[s._v("我们也说过了，容器内没有后台应用的概念，所以传统守护进程服务 "),t("code",[s._v("daemon: on")]),s._v(" 没有意义。在容器中想要运行则必须要一个前台进程。")]),s._v(" "),t("p",[s._v("另外，CMD 命令会被 "),t("code",[s._v("docker run")]),s._v(" 带有的参数给覆盖掉，例如：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("FROM ubuntu:18.04\nCMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sh"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo HELLO WORLD"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("构建为 "),t("code",[s._v("test:test")]),s._v("，运行时 "),t("code",[s._v("docker run test:test")]),s._v(" 会输出 "),t("code",[s._v("HELLO WORLD")]),s._v("，但是参上参数 "),t("code",[s._v("docker run test:test echo HELLO DOCKER")]),s._v(" 就会输出 "),t("code",[s._v("HELLO DOCKER")]),s._v("。")]),s._v(" "),t("p",[s._v("而且哪怕我们在 Dockerfile 中没有指定任何 CMD 命令，只要带上参数，那么就会覆盖为 CMD 命令。")]),s._v(" "),t("p",[t("strong",[s._v("ENTRYPOINT")])]),s._v(" "),t("p",[s._v("目的也和 CMD 一样，在容器启动时指定需要的程序和程序对应的参数，但是指定它之后，CMD 的意义就发生了改变，不再是直接运行命令，而是作为参数传递给 "),t("code",[s._v("ENTRYPOINT")]),s._v("就是："),t("code",[s._v('<ENTRYPOINT> "<CMD>"')])]),s._v(" "),t("p",[s._v("这样做的好处，就是可以将 CMD 执行后得到的参数再传递给 "),t("code",[s._v("ENTRYPOINT")]),s._v(" 进行处理。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("FROM ubuntu:18.04\nENTRYPOINT "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("当运行 "),t("code",[s._v("docker run test:test HELLO DOCKER")]),s._v(" 时，"),t("code",[s._v("HELLO DOCKER")]),s._v(" 会作为 CMD 传递给 "),t("code",[s._v("ENTRYPOINT")]),s._v("，最终输出。")]),s._v(" "),t("p",[t("code",[s._v("ENTRYPOINT")]),s._v(" 也是可以覆盖的，只需要在 "),t("code",[s._v("docker run")]),s._v(" 运行时带上 "),t("code",[s._v('--entrypoint="echo"')]),s._v(" 就可以覆盖。")]),s._v(" "),t("p",[s._v("但是不管是哪种方式，最终在 "),t("code",[s._v("docker ps")]),s._v(" 查看容器信息时，显示的都是最后运行的命令。")]),s._v(" "),t("p",[t("strong",[s._v("ENV")])]),s._v(" "),t("p",[s._v("设置环境变量，格式有两种：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ENV "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nENV "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" ……\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("在这里定义之后，其他后面的指令都可以直接使用这里的定义。")]),s._v(" "),t("p",[t("strong",[s._v("ARG")])]),s._v(" "),t("p",[s._v("类似 ENV，但区别是：不会在容器运行时看到这些值。但是不要保存敏感数据，因为 "),t("code",[s._v("docker history")]),s._v(" 还是可以看到的。")]),s._v(" "),t("p",[s._v("注意，ARG 参数的生效范围截止到下一个 FROM，在下一个 FROM 之后假如还需要使用，那么必须再次指定。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ARG "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_USERNAME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("library\n\nFROM "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DOCKER_USERNAME}")]),s._v("/alpine\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在FROM 之后使用变量，必须在每个阶段分别指定")]),s._v("\nARG "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_USERNAME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("library\n\nRUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -x "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DOCKER_USERNAME}")]),s._v("\n\nFROM "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DOCKER_USERNAME}")]),s._v("/alpine\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在FROM 之后使用变量，必须在每个阶段分别指定")]),s._v("\nARG "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_USERNAME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("library\n\nRUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -x "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DOCKER_USERNAME}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[t("strong",[s._v("VOLUME")])]),s._v(" "),t("p",[s._v("容器运行应该是无状态的，假如我们想要保存某些数据，那么就需要链接服务器目录和容器对应的目录（这种操作叫做挂载），这样即使容器挂掉，数据也不会丢失。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Dockerfile 方式：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("FROM ubuntu:18.04\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 Dockerfile 文件时，只能指定容器内目录，不能指定宿主机目录，因为不能保证每个宿主机都会存在这种目录")]),s._v("\nVOLUME "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/dockerContainerDir"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/dockerContainerDir2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("匿名目录挂载：")]),s._v(" "),t("p",[s._v("不显示指定宿主机的文件夹，会自动生成在 "),t("code",[s._v("/var/lib/docker/volumes")]),s._v(" 下。")]),s._v(" "),t("p",[t("code",[s._v("docker run -it -v <容器内目录>")])]),s._v(" "),t("p",[s._v("假如出现权限问题，只需要多加 "),t("code",[s._v("--privileged=true")]),s._v(" 即可")]),s._v(" "),t("p",[s._v("运行命令可覆盖 Dockerfile 的配置")])]),s._v(" "),t("li",[t("p",[s._v("具名挂载：")]),s._v(" "),t("p",[s._v("显示指定宿主机文件夹")]),s._v(" "),t("p",[t("code",[s._v("docker run -it -v <宿主机目录>:<容器内目录>")])]),s._v(" "),t("p",[s._v("假如出现权限问题，只需要多加 "),t("code",[s._v("--privileged=true")]),s._v(" 即可")]),s._v(" "),t("p",[s._v("运行命令可覆盖 Dockerfile 的配置")])])]),s._v(" "),t("p",[t("strong",[s._v("EXPOSE")])]),s._v(" "),t("p",[s._v("声明容器运行时提供服务的端口，但是这只是个声明，不意味着开启这个端口的服务，只是提个醒。")]),s._v(" "),t("p",[s._v("和使用 "),t("code",[s._v("docker run -p")]),s._v(" 不同，"),t("code",[s._v("EXPOSE")]),s._v(" 不会去主动做映射，只是声明一下。")]),s._v(" "),t("p",[s._v("但是在使用 "),t("code",[s._v("docker run -P")]),s._v("（大写 P）时，会随机将 "),t("code",[s._v("EXPOSE")]),s._v(" 的端口随机映射给宿主机端口。")]),s._v(" "),t("p",[s._v("可以使用：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("EXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\nEXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp\nEXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/udp\nEXPOSE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("端口"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("协议"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("WORKDIR")])]),s._v(" "),t("p",[s._v("指定工作目录（当前目录），格式为 "),t("code",[s._v("WORKDIR <路径>")]),s._v("，如果不存在，Docker 会自动建立一个。")]),s._v(" "),t("p",[s._v("每个 "),t("code",[s._v("RUN")]),s._v(" 都可以看做是一个新的进程执行环境，所以假如使用")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("RUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /app\nRUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HELLO"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world.txt"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("其实不会进入到 "),t("code",[s._v("/app")]),s._v(" 中去创建文件，结果是失败的。因为在 shell 中，这两条命令是处于同一个环境下的，但是在 docker 中，这是两个环境，第二个明显不会集成第一个。")]),s._v(" "),t("p",[s._v("要解决这个问题，需要使用 "),t("code",[s._v("WORKDIR /app")]),s._v("。"),t("code",[s._v("WORKDIER")]),s._v(" 其实就是改变工作环境，假如执行命令存在相对路径，那么也是相对于 "),t("code",[s._v("WORKDIR")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("USER")])]),s._v(" "),t("p",[s._v("改变之后命令执行时的身份。注意，这个用户必须是实现建立好的，否则是无法进行切换的。例如：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加组 causes，并且修改用户的组")]),s._v("\nRUN "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("groupadd")]),s._v(" -r causes "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" user -r -g causes causes\n"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" causes\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("假如是使用 root 执行的脚本，在这期间希望改变身份，那么不要使用 "),t("code",[s._v("su")]),s._v("、"),t("code",[s._v("sudo")]),s._v("。因为缺少 TTY 可能出错，且需要复杂配置，可以使用 "),t("code",[s._v("gosu")])]),s._v(" "),t("p",[t("strong",[s._v("LABEL")])]),s._v(" "),t("p",[s._v("添加一些元数据：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("LABEL "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("SHELL")])]),s._v(" "),t("p",[s._v("默认情况下使用 "),t("code",[s._v("/bin/sh -c")]),s._v("，可以使用 SHELL 来切换，例如：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("SHELL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/sh"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("SHELL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("指定之后，可以切换 CMD、RUN、ENTRYPOINT 使用的 shell。")])])}),[],!1,null,null,null);e.default=n.exports},734:function(s,e,a){s.exports=a.p+"assets/img/2022-04-15-14-23-40.da859732.png"},735:function(s,e,a){s.exports=a.p+"assets/img/2022-04-15-14-23-44.3022d856.png"}}]);